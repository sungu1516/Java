package com.day;

public class Day_0409 {

	public static void main(String[] args) {
		
		int a = 3;
		int b = 7;
		int c = 11;
		int d = 100;
		int e = 2;
		int f = 200;
		
		// 위의 변수들을 배열에 넣어보자
		
		int[] arr = new int[6];      // 메모리 주소를 할당을 받는다. 4byte(int크기) * 6(공간의 개수) = 24byte크기의 메모리를 할당받는다. 각 공간의 메모리 주소는 다르지만 자바에서 확인은 어려움.
									// PC의 Ram 은 stack과 heap 두 가지로 나뉨. 자바의 기본 자료형은 stack에 저장되고, 비교적 대용량인 참조 자료형(new로 만드는 것들)은 heap에 저장됨.
		
		arr[0] = a;
		arr[1] = b;
		arr[2] = c;
		arr[3] = d;
		arr[4] = e;
		arr[5] = f;
		
		for (int i = 0; i < arr.length; i++) {
			
		}
		
		int[] arr2 = new int[100];
		
		for (int i = 0; i < arr2.length; i++) {
			arr2[i] = i + 1;
		}
		
		
		
		
		}
		
	
	
	static void asc_ex() {
		
		// 배열을 활용하여 오름차순 정렬 해보기 + 이중 for문
		
				int a = 3;
				int b = 6;
				int c = 2;
				int d = 11;
				int e = 1;
				
				int[] array_int = {a,b,c,d,e};
				
				for (int i = 0; i < array_int.length; i++) {
					for (int j = 1 + i; j < array_int.length; j++) {
						if(array_int[i] >= array_int[j]) {
							
							int temp = array_int[i];
							array_int[i] = array_int[j];
							array_int[j] = temp;
							System.out.println("성공");   // 이렇게 한 바퀴가 돌면 a와 나머지 뒤의 수들이 모두 비교가 되고, 결국 맨 앞에 제일 작은 수가 오게 된다. 마찬가지로 i = 1이 되면 두번째 자리에 두번째로 작은 수가 오게 됨. 
							
						}
					}	
				}
				
				for (int i = 0; i < array_int.length; i++) {
					System.out.println(array_int[i]);
				}
	}
	
	static void homework() {
		// 내림차순 정렬 알고리즘
		
		int a = 7;
		int b = 6;
		int c = 4;
		
		int[] arr_c = null;
		arr_c = new int[] {1, 2, 3};
		
		
		
		

//		int[] array_int = null;          // 기본 방식과 다른 방식. 우선 null로 지정해주고, 다움에 값을 대입
//		array_int = new int[] {7, 6 ,11};   // 이 때 new를 사용해주어야 한다. 
		
		int[] array_int2 = new int[3];   // 이 경우 원소의 개수를 미리 설정해준다. 배열의 크기를 할당하는 것이다. 
		array_int2[0] = 7;     
		array_int2[1] = 6;
		array_int2[2] = 11;
		
		int[] array_int = new int[7];   
		System.out.println(array_int);
		for (int i = 0; i < array_int.length; i++) {
			if (i == 5)
				continue;           // break와 다르게, 아래의 코드는 무시하지만 블럭을 나가지 않고 다시 위로 가서 진행된다. 예를 들어 이 경우 5일 때 배열의 값이 지정되지 않음
			array_int[i] = i * 100;
			System.out.println(array_int[i]);
		}
		
		
		
		if(a < b) {
			
			int temp = a;
			a = b;
			b = temp;
						
			if (a < c) {
				
				int temp2 = a;
				a = c;
				b = temp2;
				c = temp;				
			}
			
			else if (b < c) {
				
				int temp2 = b;
				b = c;
				c = temp2;	
			}
		
			System.out.println("a3 : " + a);
			System.out.println("b6 : " + b);
			System.out.println("b6 : " + c);
		}else {
			System.out.println("a가 b보다 더 큰 경우");
				
		}
	}
}
